{"version":3,"sources":["components/PlayerDetails.js","components/PlayerControler.js","components/Player.js","App.js","reportWebVitals.js","index.js"],"names":["PlayerDetails","props","className","src","song","img_src","alt","title","artist","onClick","SkipSong","icon","faBackward","setIsPlaying","isPlaying","faPause","faPlay","faForward","Player","audioElement","useRef","useState","useEffect","current","play","pause","songs","currentSongI","ref","PlayerControler","forwards","setCurrentSongI","temp","length","nextSongI","App","setNextSongI","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAceA,EAZO,SAACC,GACnB,OACI,sBAAKC,UAAU,4BAAf,UACI,qBAAKA,UAAU,cAAf,SACI,qBAAKC,IAAKF,EAAMG,KAAKC,QAASC,IAAI,OAEtC,oBAAIJ,UAAU,gBAAd,SAA+BD,EAAMG,KAAKG,QAC1C,oBAAIL,UAAU,iBAAd,SAAgCD,EAAMG,KAAKI,a,cCWxCR,EAhBO,SAACC,GACnB,OACG,sBAAKC,UAAU,6BAAf,UACK,wBAAQA,UAAU,WAAWO,QAAS,kBAAIR,EAAMS,UAAS,IAAzD,SACG,cAAC,IAAD,CAAiBC,KAAMC,QAE1B,wBAAQV,UAAU,WAAWO,QAAS,kBAAIR,EAAMY,cAAcZ,EAAMa,YAApE,SAEG,cAAC,IAAD,CAAiBH,KAAMV,EAAMa,UAAYC,IAAUC,QAEvD,wBAAQd,UAAU,WAAWO,QAAS,kBAAIR,EAAMS,UAAS,IAAzD,SACI,cAAC,IAAD,CAAiBC,KAAMM,YC8CvBC,EAzDA,SAACjB,GACZ,IAAMkB,EAAeC,iBAAO,MADN,EAGYC,oBAAS,GAHrB,mBAGfP,EAHe,KAGJD,EAHI,KAKtBS,qBAAU,WACHR,EACCK,EAAaI,QAAQC,OAGrBL,EAAaI,QAAQE,WAgC7B,OACI,sBAAKvB,UAAU,mBAAf,UACI,uBAAOC,IAAKF,EAAMyB,MAAMzB,EAAM0B,cAAcxB,IAAKyB,IAAKT,IAEtD,cAAC,EAAD,CAAef,KAAMH,EAAMyB,MAAMzB,EAAM0B,gBACvC,cAACE,EAAD,CACIf,UAAWA,EACXD,aAAcA,EACdH,SApCK,WAAmB,IAAlBoB,IAAiB,yDAE5BA,EACC7B,EAAM8B,iBAAgB,WAElB,IAAIC,EAAO/B,EAAM0B,aAMjB,QALIK,EACM/B,EAAMyB,MAAMO,OAAQ,IAE1BD,EAAO,GAEJA,KAKX/B,EAAM8B,iBAAgB,WAClB,IAAIC,EAAO/B,EAAM0B,aAMjB,QALAK,EACU,IACNA,EAAO/B,EAAMyB,MAAMO,OAAS,GAGzBD,QAeX,8BAAG,gDAA4B/B,EAAMyB,MAAMzB,EAAMiC,WAAW3B,MAA5D,OAAuEN,EAAMyB,MAAMzB,EAAMiC,WAAW1B,cCPjG2B,MA9Cf,WAAgB,IAAD,EACGd,mBAAS,CACvB,CACEd,MAAM,OACNC,OAAO,eACPH,QAAQ,sBACRF,IAAI,qBAEN,CACEI,MAAM,YACNC,OAAO,SACPH,QAAQ,sBACRF,IAAI,qBAEN,CACEI,MAAM,mBACNC,OAAO,cACPH,QAAQ,sBACRF,IAAI,uBAjBDuB,EADM,sBAsB2BL,mBAAS,GAtBpC,mBAsBNM,EAtBM,KAsBQI,EAtBR,OAuBqBV,mBAASM,EAAe,GAvB7C,mBAuBNO,EAvBM,KAuBKE,EAvBL,KAsCb,OAbAd,qBAAU,WAERc,GAAa,WACX,OAAGT,EAAc,EAAID,EAAMO,OAAQ,EAE1B,EAEAN,EAAc,OAGzB,CAACA,IAID,qBAAKzB,UAAU,MAAf,SACE,cAAC,EAAD,CAAQyB,aAAcA,EAAcI,gBAAiBA,EAAiBG,UAAWA,EAAWR,MAAOA,OC/B1FW,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCDdQ,IAASC,OAAO,cAAC,IAAMC,WAAP,UAAkB,cAAC,EAAD,MAA2BC,SAASC,eAAe,SACrFb,M","file":"static/js/main.5bdd8055.chunk.js","sourcesContent":["import React from 'react'\n\nconst PlayerDetails = (props) =>{\n    return(\n        <div className=\"component-player--details\">\n            <div className=\"details-img\">\n                <img src={props.song.img_src} alt='' />\n            </div>\n            <h3 className=\"details-title\">{props.song.title}</h3>\n            <h4 className=\"details-artist\">{props.song.artist}</h4>\n        </div>\n    )\n}\n\nexport default PlayerDetails;","import React from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faPlay, faPause, faForward, faBackward} from '@fortawesome/free-solid-svg-icons'\n\nconst PlayerDetails = (props) =>{\n    return(\n       <div className='component-player--controls'>\n            <button className=\"skip-btn\" onClick={()=>props.SkipSong(false)}>\n               <FontAwesomeIcon icon={faBackward} />\n            </button>\n            <button className=\"play-btn\" onClick={()=>props.setIsPlaying(!props.isPlaying)} >\n            {/* props + function to update(simply the opposite of the initial state) */}\n               <FontAwesomeIcon icon={props.isPlaying ? faPause : faPlay} />\n           </button>\n           <button className=\"skip-btn\" onClick={()=>props.SkipSong(true)} >\n               <FontAwesomeIcon icon={faForward} />\n           </button>\n       </div>\n    )\n}\nexport default PlayerDetails;","import React, {useState, useRef, useEffect} from 'react'\nimport PlayerDetails from './PlayerDetails'\nimport PlayerControler from './PlayerControler'\n\nconst Player = (props) => {\n    const audioElement = useRef(null); \n    //audioElement create for ref values <audio>\n    const [isPlaying, setIsPlaying] = useState(false);\n\n    useEffect(()=>{\n        if(isPlaying){\n            audioElement.current.play();\n            //if ok, you use the api JS play\n        }else{\n            audioElement.current.pause();\n        }\n    })\n\n    const SkipSong = (forwards=true) =>{\n        //SkipSong ->  to manage the flow of music played\n        if(forwards){\n            props.setCurrentSongI(()=>{\n                //create temporary variable 'temp' to manage music\n                let temp = props.currentSongI;\n                    temp++;//to add\n                if(temp > props.songs.length -1){\n                //length -> related to the useEffect (App.js)\n                    temp = 0;\n                }\n                return temp;\n            })\n        }\n        else{\n            //the opposite ->\n            props.setCurrentSongI(()=>{\n                let temp = props.currentSongI;\n                temp--; //-> to go backwards\n                if(temp < 0){\n                    temp = props.songs.length - 1;\n                //the value of our current song will be equal to the previous length which will bring us back to our last songs\n                }\n                return temp;\n            })\n        }\n    }\n\n    return(\n        <div className=\"component-player\">\n            <audio src={props.songs[props.currentSongI].src} ref={audioElement}></audio>\n            {/* we play the music that is in the array songs(App)[props.current song] */}\n            <PlayerDetails song={props.songs[props.currentSongI]}/>\n            <PlayerControler \n                isPlaying={isPlaying} \n                setIsPlaying={setIsPlaying} \n                SkipSong={SkipSong}\n            />\n            <p><strong>Next up : </strong>{props.songs[props.nextSongI].title} by {props.songs[props.nextSongI].artist}</p>\n            {/* the props created in this page connected to the props of the app page  */}\n        </div>\n    )\n}\nexport default Player\n","import {useState, useEffect} from 'react'\nimport Player from './components/Player'\n\nfunction App() {\n  const [songs] = useState([\n    {\n      title:\"Husk\",\n      artist:\"Black Foxxes\",\n      img_src:\"./images/song-1.jpg\",\n      src:\"./music/song1.mp3\"\n    },\n    {\n      title:\"Yesterday\",\n      artist:\"Staind\",\n      img_src:\"./images/song-2.jpg\",\n      src:\"./music/song2.mp3\"\n    },\n    {\n      title:\"Nobody Listening\",\n      artist:\"Linkin Park\",\n      img_src:\"./images/song-3.jpg\",\n      src:\"./music/song3.mp3\"\n    }\n  ]);\n\n  const [currentSongI, setCurrentSongI] = useState(0);\n  const [nextSongI, setNextSongI] = useState(currentSongI + 1);\n\n  useEffect(()=>{\n  //the following song will be updated to our current song\n    setNextSongI(()=>{\n      if(currentSongI +1 > songs.length -1){\n        //length ->reminder : of the number of \"codets -> to compare\n        return 0;\n      }else{\n        return currentSongI +1;\n      }\n    })\n  },[currentSongI]);\n  //[optimisation to compare with the initial value ->currentSongI]\n\n  return (\n    <div className=\"App\">\n      <Player currentSongI={currentSongI} setCurrentSongI={setCurrentSongI} nextSongI={nextSongI} songs={songs}/>\n      {/* songs Hook + browses [currentSongI Hook] -> use table to browses different values  */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.css'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<React.StrictMode><App /></React.StrictMode>,document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}